// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/spoke-d/path (interfaces: Scope,Box)

// Package path is a generated GoMock package.
package path

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockScope is a mock of Scope interface
type MockScope struct {
	ctrl     *gomock.Controller
	recorder *MockScopeMockRecorder
}

// MockScopeMockRecorder is the mock recorder for MockScope
type MockScopeMockRecorder struct {
	mock *MockScope
}

// NewMockScope creates a new mock instance
func NewMockScope(ctrl *gomock.Controller) *MockScope {
	mock := &MockScope{ctrl: ctrl}
	mock.recorder = &MockScopeMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockScope) EXPECT() *MockScopeMockRecorder {
	return m.recorder
}

// GetIdentValue mocks base method
func (m *MockScope) GetIdentValue(arg0 string) (Box, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetIdentValue", arg0)
	ret0, _ := ret[0].(Box)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetIdentValue indicates an expected call of GetIdentValue
func (mr *MockScopeMockRecorder) GetIdentValue(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetIdentValue", reflect.TypeOf((*MockScope)(nil).GetIdentValue), arg0)
}

// MockBox is a mock of Box interface
type MockBox struct {
	ctrl     *gomock.Controller
	recorder *MockBoxMockRecorder
}

// MockBoxMockRecorder is the mock recorder for MockBox
type MockBoxMockRecorder struct {
	mock *MockBox
}

// NewMockBox creates a new mock instance
func NewMockBox(ctrl *gomock.Controller) *MockBox {
	mock := &MockBox{ctrl: ctrl}
	mock.recorder = &MockBoxMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockBox) EXPECT() *MockBoxMockRecorder {
	return m.recorder
}

// Value mocks base method
func (m *MockBox) Value() interface{} {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Value")
	ret0, _ := ret[0].(interface{})
	return ret0
}

// Value indicates an expected call of Value
func (mr *MockBoxMockRecorder) Value() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Value", reflect.TypeOf((*MockBox)(nil).Value))
}
